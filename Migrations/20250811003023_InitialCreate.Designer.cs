// <auto-generated />
using System;
using CineManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CineManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250811003023_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("CineManager.Models.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Funcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("TEXT");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SalaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SucursalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PeliculaId");

                    b.HasIndex("SalaId");

                    b.HasIndex("SucursalId");

                    b.ToTable("Funciones");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clase")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroSala")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SucursalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SucursalId");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Funcion", b =>
                {
                    b.HasOne("CineManager.Models.Entities.Pelicula", "Pelicula")
                        .WithMany("Funciones")
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineManager.Models.Entities.Sala", "Sala")
                        .WithMany("Funciones")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CineManager.Models.Entities.Sucursal", "Sucursal")
                        .WithMany("Funciones")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelicula");

                    b.Navigation("Sala");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Pelicula", b =>
                {
                    b.HasOne("CineManager.Models.Entities.Categoria", "Categoria")
                        .WithMany("Peliculas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Sala", b =>
                {
                    b.HasOne("CineManager.Models.Entities.Sucursal", "Sucursal")
                        .WithMany("Salas")
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Sucursal", b =>
                {
                    b.OwnsOne("CineManager.Models.ValueObjects.Address", "Direccion", b1 =>
                        {
                            b1.Property<int>("SucursalId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Departamento")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Direccion")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Distrito")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Provincia")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("SucursalId");

                            b1.ToTable("Sucursales");

                            b1.WithOwner()
                                .HasForeignKey("SucursalId");
                        });

                    b.Navigation("Direccion")
                        .IsRequired();
                });

            modelBuilder.Entity("CineManager.Models.Entities.Usuario", b =>
                {
                    b.OwnsOne("CineManager.Models.ValueObjects.Address", "Direccion", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Departamento")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Direccion")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Distrito")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Provincia")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Direccion")
                        .IsRequired();
                });

            modelBuilder.Entity("CineManager.Models.Entities.Categoria", b =>
                {
                    b.Navigation("Peliculas");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Pelicula", b =>
                {
                    b.Navigation("Funciones");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Sala", b =>
                {
                    b.Navigation("Funciones");
                });

            modelBuilder.Entity("CineManager.Models.Entities.Sucursal", b =>
                {
                    b.Navigation("Funciones");

                    b.Navigation("Salas");
                });
#pragma warning restore 612, 618
        }
    }
}
